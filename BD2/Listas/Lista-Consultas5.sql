--É preciso atualizar a informação do saldo do cliente na tabela cliente.
--para este propósito devemos levar em conta o saldo dos depósitos menos os
--saldos de empréstimos. o cálculo final deve ser armazenado na tabela conta.

--CLIENTES QUE POSSUEM APENAS DEPOSITOS
--Q01:
SELECT	c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA, SUM(d.SALDO_DEPOSITO) AS TOTAL
	FROM cliente as c , deposito as d
	WHERE (c.nome_cliente || d.NOME_AGENCIA || d.NUMERO_CONTA) 
		not in  (SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM EMPRESTIMO)
	GROUP BY c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA; -- ok

--CLIENTES QUE POSSUEM APENAS EMPRESTIMOS
--Q02:
SELECT	e.nome_cliente , e.nome_agencia, e.numero_conta, (-1 * SUM(VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO as e
	where e.nome_cliente || e.nome_agencia || e.numero_conta not in (select d.nome_cliente || d.nome_agencia || d.numero_conta from deposito d)
	group by e.nome_cliente, e.nome_agencia, e.numero_conta; -- ok


--CLIENTES QUE POSSUEM DEPOSITO E EMPRESTIMOS (AMBOS)
--Q03:
SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, (SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO AS e, DEPOSITO AS d
	where e.nome_cliente = d.nome_cliente
	and e.nome_agencia = d.nome_agencia
	and e.numero_conta = d.numero_conta
	GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA; -- ok

--CLIENTES QUE POSSUEM DEPOSITOS, EMPRESTIMOS OU AMBOS
--Q04:
(SELECT	c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA, SUM(d.SALDO_DEPOSITO) AS TOTAL
	FROM cliente as c , deposito as d
	WHERE (c.nome_cliente || d.NOME_AGENCIA || d.NUMERO_CONTA) 
		not in  (SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM EMPRESTIMO)
	GROUP BY c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA)
union
(SELECT	e.nome_cliente , e.nome_agencia, e.numero_conta, (-1 * SUM(VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO as e
	where e.nome_cliente || e.nome_agencia || e.numero_conta not in (select d.nome_cliente || d.nome_agencia || d.numero_conta from deposito d)
	group by e.nome_cliente, e.nome_agencia, e.numero_conta)
union
(SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, (SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO AS e, DEPOSITO AS d
	where e.nome_cliente = d.nome_cliente
	and e.nome_agencia = d.nome_agencia
	and e.numero_conta = d.numero_conta
	GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA); -- ok

--Agora utilizamos a Q04 como relatório para o comando de atualização

UPDATE CONTA SET SALDO_CONTA = 0;

SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;

--
-- PERCEBAM QUE ESTA CONSULTA AINDA NÃO FEZ UM RELATÓRIO COMPLETO
-- DOS CLIENTES DO BANCO PORQUE EXISTEM CLIENTES QUE NÃO FIZERAM
-- NEM EMPRESTIMOS E NEM DEPÓSITOS, MAS AINDA ASSIM POSSUEM UMA
-- CONTA NO BANCO.

-- EXISTE UM MODO MAIS FÁCIL DE REALIZAR ESTAS OPERAÇÕES?


-- COM A UTILIZAÇÃO DE JUNÇÕES, ESCREVEMOS CONSULTAS MENORES, MAIS
-- SIMPLES, DETERMINANDO COMO AS LINHAS DE CADA TABELA DEVEM SER 
-- RETORNADAS DE ACORDO COM A EXISTÊNCIA OU NÃO DE UMA LINHA 
-- CORRESPONDENTE NA OUTRA TABELA
-- Q05
update conta set saldo_conta = relatorio.TOTAL
	from ((SELECT	c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA, SUM(d.SALDO_DEPOSITO) AS TOTAL
		FROM cliente as c , deposito as d
		WHERE (c.nome_cliente || d.NOME_AGENCIA || d.NUMERO_CONTA) 
			not in  (SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM EMPRESTIMO)
		GROUP BY c.NOME_CLIENTE, d.NOME_AGENCIA, d.NUMERO_CONTA)
	union
	(SELECT	e.nome_cliente , e.nome_agencia, e.numero_conta, (-1 * SUM(VALOR_EMPRESTIMO)) AS TOTAL
		FROM EMPRESTIMO as e
		where e.nome_cliente || e.nome_agencia || e.numero_conta not in (select d.nome_cliente || d.nome_agencia || d.numero_conta from deposito d)
		group by e.nome_cliente, e.nome_agencia, e.numero_conta)
	union
	(SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, (SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO)) AS TOTAL
		FROM EMPRESTIMO AS e, DEPOSITO AS d
		where e.nome_cliente = d.nome_cliente
		and e.nome_agencia = d.nome_agencia
		and e.numero_conta = d.numero_conta
		GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA)) as relatorio
	where conta.nome_cliente = relatorio.nome_cliente
	and conta.nome_agencia  = relatorio.nome_agencia
	and conta.numero_conta = relatorio.numero_conta; -- ok

--ANTES DE FAZER A CONSULTA COMPLETA, VAMOS GRADUAR A COMPLEXIDADE:
--COMEÇAMOS COM A CONSULTA PARA RETORNAR CLIENTES QUE POSSUEM
--EMPRESTIMOS E DEPOSITOS (AO MESMO TEMPO)
--Q06:
SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, (SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO AS E INNER JOIN DEPOSITO AS D on E.NOME_CLIENTE = D.NOME_CLIENTE
	AND   	E.NOME_AGENCIA = D.NOME_AGENCIA
	AND   	E.NUMERO_CONTA = D.NUMERO_CONTA
	GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA; -- ok

-- UTILIZANDO A CLÁUSULA "NATURAL", ENTÃO A CLÁUSULA "ON" NÃO
-- NECESSITA SER UTILIZADA E A COMPLEXIDADE DA CONSULTA SERÁ
-- REDUZIDA COMPARANDO COM A CONSULTA INICIAL, NA QUAL TODAS
-- AS CHAVES DEVIAM SER COMPARADAS AOS PARES.
--REESCRITA POR MEIO DE JUNÇÕES. NESTE CASO TEMOS:
--Q07:
SELECT E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, (SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO)) AS TOTAL
	FROM EMPRESTIMO AS E natural INNER JOIN DEPOSITO AS D
	GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.numero_conta; -- ok

--CONCLUSÃO:
--É MELHOR FAZER USO DA CLÁUSULA NATURAL QUANDO POSSÍVEL.

-- QUER-SE RETORNAR DADOS EXCLUSIVOS DA TABELA CLIENTE EM UM JOIN
-- COM A TABELA DEPOSITO. CASO EXISTAM DEPÓSITO DEVE SER MOSTRADO
-- E CASO NÃO EXISTAM DEPÓSITOS MOSTRAR APENAS OS DADOS DO CLIENTE
--Q08:
SELECT	C.NOME_CLIENTE, C.CIDADE_CLIENTE, D.NOME_AGENCIA, NUMERO_CONTA, SUM(D.SALDO_DEPOSITO) AS DEP
	FROM CLIENTE AS C NATURAL left OUTER JOIN DEPOSITO AS D
	GROUP BY C.NOME_CLIENTE, D.NOME_AGENCIA, D.NUMERO_CONTA
	ORDER by C.nome_cliente, C.cidade_cliente, D.nome_agencia, D.numero_conta; -- ok
-- AS LINHAS DA TABELA À ESQUERDA QUE ESTIVEREM FORA DO JOIN 
-- SERÃO RETORNADAS, PORÉM COM CONTEÚDO NULO NOS DADOS NÃO
-- AGRUPADOS.


--Q09: O MESMO ENTRE CLIENTE E EMPRESTIMO
SELECT	C.NOME_CLIENTE, C.CIDADE_CLIENTE, e.nome_agencia , e.NUMERO_CONTA, SUM(e.valor_emprestimo) AS EMP
	FROM CLIENTE AS C natural left OUTER JOIN emprestimo e
	GROUP BY C.NOME_CLIENTE, C.cidade_cliente, e.nome_agencia, e.numero_conta
	ORDER BY C.NOME_CLIENTE, C.CIDADE_CLIENTE, e.NOME_AGENCIA, e.NUMERO_CONTA; -- ok

-- ISSO NÃO É UMA FALHA, MAS UMA VIRTUDE DO JOIN PORQUE NOS PERMITE
-- RESPONDER À SEGUINTE PERGUNTA:

--*************************************************************
-- "RETORNE TODOS OS CLIENTES DO BANCO COM SUAS RESPECTIVAS SOMAS
-- "DE DEPÓSITOS E EMPRESTIMOS CASO EXISTAM"
--*************************************************************
--Q10a:
SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA, SUM(D.SALDO_DEPOSITO) AS TOTAL_DEP, SUM(E.VALOR_EMPRESTIMO) AS TOTAL_EMP
	FROM CONTA AS C natural left join (EMPRESTIMO AS E natural left JOIN deposito D)
	GROUP by C.nome_cliente, C.NOME_AGENCIA, C.NUMERO_CONTA; -- ok


--Q10b:
SELECT	C.NOME_CLIENTE, C.NUMERO_CONTA,SUM(D.SALDO_DEPOSITO), SUM(E.VALOR_EMPRESTIMO) AS TOTAL_EMP
	FROM CONTA AS C natural full JOIN 
		(EMPRESTIMO AS E NATURAL full join DEPOSITO AS D)
	GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA; -- ok




--Agora a atualizacao do saldo da conta dos clientes fica
--mais simples do que a Q05
--Q10c ou Q05b: 
UPDATE CONTA SET SALDO_CONTA = RELATORIO.TOTAL
	FROM(
		SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA, SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO) AS TOTAL
		FROM CONTA AS C natural full join
				(EMPRESTIMO AS E natural full JOIN DEPOSITO AS D)
		GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA
	) AS RELATORIO
	WHERE  CONTA.NOME_CLIENTE = RELATORIO.NOME_CLIENTE
	and CONTA.NOME_AGENCIA = RELATORIO.NOME_AGENCIA
	and CONTA.NUMERO_CONTA = RELATORIO.NUMERO_CONTA; -- ok

--SERÁ QUE AGORA ESTÁ CERTO?
SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;

--Q10d
SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA, COALESCE(SUM(D.SALDO_DEPOSITO  ), 0) AS TOTAL_DEP, COALESCE(SUM(E.VALOR_EMPRESTIMO), 0) AS TOTAL_EMP
	FROM CONTA AS C natural FULL JOIN 
			(EMPRESTIMO AS E natural full join DEPOSITO AS D)
	GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA; -- ok



--Q10e
SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA, COALESCE(SUM(D.SALDO_DEPOSITO),0) - COALESCE(SUM(E.VALOR_EMPRESTIMO),0) AS TOTAL
	from conta as C natural full join 
		(EMPRESTIMO AS E NATURAL full join DEPOSITO AS D)
	GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.numero_conta; -- ok


--Q10f ou Q05c
UPDATE CONTA SET SALDO_CONTA = RELATORIO.TOTAL
	FROM(
		SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA , C.NUMERO_CONTA, COALESCE(SUM(D.SALDO_DEPOSITO), 0) - COALESCE(SUM(E.VALOR_EMPRESTIMO),0) AS TOTAL
		FROM CONTA AS C natural full join
				(EMPRESTIMO AS E natural full join DEPOSITO AS D)
		GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA
	) AS RELATORIO
	WHERE CONTA.NOME_CLIENTE = RELATORIO.NOME_CLIENTE
	AND   CONTA.NUMERO_CONTA = RELATORIO.NUMERO_CONTA
	and   CONTA.nome_agencia = RELATORIO.NOME_AGENCIA; -- ok


--SERÁ QUE AGORA ESTÁ CERTO?
SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;

